[{"/Volumes/Untitled/SheCodes Workshop/weather-react/src/index.js":"1","/Volumes/Untitled/SheCodes Workshop/weather-react/src/App.js":"2","/Volumes/Untitled/SheCodes Workshop/weather-react/src/reportWebVitals.js":"3","/Volumes/Untitled/SheCodes Workshop/weather-react/src/Weather.js":"4","/Volumes/Untitled/SheCodes Workshop/weather-react/src/DateTime.js":"5"},{"size":436,"mtime":1608337500000,"results":"6","hashOfConfig":"7"},{"size":263,"mtime":1608787750000,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607641495000,"results":"9","hashOfConfig":"7"},{"size":3237,"mtime":1608787756000,"results":"10","hashOfConfig":"7"},{"size":488,"mtime":1608782824000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mjukh",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Volumes/Untitled/SheCodes Workshop/weather-react/src/index.js",[],["24","25"],"/Volumes/Untitled/SheCodes Workshop/weather-react/src/App.js",[],"/Volumes/Untitled/SheCodes Workshop/weather-react/src/reportWebVitals.js",[],"/Volumes/Untitled/SheCodes Workshop/weather-react/src/Weather.js",["26","27"],"import React, { useState } from \"react\";\nimport DateTime from \"./DateTime\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      imgUrl: \"https://ssl.gstatic.com/onebox/weather/48/sunny.png\",\n      wind: response.data.wind.speed,\n      city: response.data.name,\n    });\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"Weather\">\n          <div className=\"overview\">\n            <h1>{weatherData.city}</h1>\n            <ul>\n              <li>\n                <DateTime date={weatherData.date} />\n              </li>\n              <li>{weatherData.description}</li>\n            </ul>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"clearfix weather-temperature\">\n                <img\n                  src={weatherData.imgUrl}\n                  alt={weatherData.description}\n                  className=\"float-left\"\n                />\n                <div className=\"float-left\">\n                  <strong>{Math.round(weatherData.temperature)}</strong>\n                  <span className=\"units\"></span>\n                  <a href=\"/\">°C</a> | <a href=\"/\">°F</a>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <ul>\n                <li>Humidity: {weatherData.humidity}%</li>\n                <li>Wind: {weatherData.wind} km/h</li>\n              </ul>\n            </div>\n            <div>\n              <form>\n                <div className=\"row\">\n                  <div className=\"col-10\">\n                    <input\n                      type=\"search\"\n                      placeholder=\"Type a city..\"\n                      className=\"form-control\"\n                      autoFocus=\"on\"\n                      autocomplete=\"off\"\n                    />\n                  </div>\n                  <div className=\"col-2\">\n                    <input\n                      type=\"submit\"\n                      value=\"search\"\n                      className=\"btn btn-primary w-200\"\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <footer id=\"link\">\n          This project was coded by Iliana Ramirez and is{\" \"}\n          <a\n            href=\"https://github.com/redseagal/weather-react\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            open-sourced on GitHub\n          </a>\n        </footer>\n      </div>\n    );\n  } else {\n    const apiKey = \"6b639f16df2a6ce6f88ae77448e6832f\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return \"loading...\";\n  }\n}\n","/Volumes/Untitled/SheCodes Workshop/weather-react/src/DateTime.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":8,"column":10,"nodeType":"34","messageId":"35","endLine":8,"endColumn":14},{"ruleId":"32","severity":1,"message":"36","line":8,"column":16,"nodeType":"34","messageId":"35","endLine":8,"endColumn":23},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'city' is assigned a value but never used.","Identifier","unusedVar","'setCity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]